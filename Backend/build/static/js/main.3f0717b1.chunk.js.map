{"version":3,"sources":["context/CurrentUser.js","logo.jpg","pages/Home.js","pages/Login.js","components/User.js","components/Form.js","components/TransactionList.js","pages/Signup.js","components/Layout.js","pages/Dashboard.js","pages/Error404.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentUser","createContext","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","useEffect","async","token","localStorage","getItem","console","error","log","response","fetch","headers","ok","Error","status","statusText","user","json","message","getLoggedInUser","_jsx","Provider","value","styles","container","textAlign","padding","backgroundColor","buttons","margin","button","textDecoration","color","borderRadius","fontSize","Home","useContext","navigate","useNavigate","className","_jsxs","style","display","flexDirection","alignItems","marginTop","src","logo","alt","width","height","paddingBottom","Link","to","onClick","removeItem","_Fragment","Login","email","setEmail","password","setPassword","setError","success","setSuccess","onSubmit","e","preventDefault","credentials","method","body","JSON","stringify","setItem","profileResponse","userProfile","errMsg","type","onChange","target","required","User","username","Form","onAddTransaction","setType","category","setCategory","amount","setAmount","date","setDate","parseFloat","alert","placeholder","TransactionList","transactions","length","map","transaction","index","toFixed","Date","toLocaleDateString","account_id","Signup","setUsername","confirmPassword","setConfirmPassword","setMessage","userData","Layout","window","location","href","position","top","left","justifyContent","zIndex","Dashboard","accountId","setAccountId","undefined","income","setIncome","transactionAmount","setTransactionAmount","transactionsList","setTransactionsList","data","Array","isArray","fetchTransactions","toISOString","newTransaction","prev","tran","transaction_id","Error404","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f0717b1.chunk.js","sourcesContent":["import { useEffect, createContext, useState } from \"react\";\r\n\r\nexport const CurrentUser = createContext();\r\n\r\nfunction CurrentUserProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getLoggedInUser = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (!token) {\r\n                    console.error('No token found');\r\n                    return;\r\n                }\r\n                console.log(token)\r\n                const response = await fetch('/api/authentication/profile', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`Error: ${response.status} ${response.statusText}`);\r\n                }\r\n\r\n                \r\n                const user = await response.json();\r\n                console.log('I have the auth response', user);\r\n                setCurrentUser(user);\r\n            } catch (error) {\r\n                console.error('Error fetching user profile:', error.message || error);\r\n            }\r\n        };\r\n        getLoggedInUser();\r\n    }, []);\r\n\r\n    return (\r\n        <CurrentUser.Provider value={{ currentUser, setCurrentUser }}>\r\n            {children}\r\n        </CurrentUser.Provider>\r\n    );\r\n}\r\n\r\nexport default CurrentUserProvider;","export default __webpack_public_path__ + \"static/media/logo.335ebc39.jpg\";","import React, { useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CurrentUser } from \"../context/CurrentUser\";\r\nimport logo from \"../logo.jpg\";\r\n// import '../Dakota-Frontend/landing.css'  put css in public folder to import\r\n// Need to import our styles so we can delete all this below\r\nconst styles = {\r\n  container: {\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    backgroundColor: \"#9c88ff\", // Example background color\r\n  },\r\n  buttons: {\r\n    margin: \"20px 0\",\r\n  },\r\n  button: {\r\n    textDecoration: \"none\",\r\n    padding: \"10px 20px\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#007bff\",\r\n    borderRadius: \"5px\",\r\n    margin: \"5px\",\r\n    fontSize: \"16px\",\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  const { currentUser, setCurrentUser } = useContext(CurrentUser);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      console.log(\"currentUser\", currentUser);\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setCurrentUser(null);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: \"20px\",\r\n        }}\r\n      >\r\n        <img\r\n          src={logo}\r\n          alt=\"logo\"\r\n          style={{ width: \"100px\", height: \"100px\", paddingBottom: \"20px\" }}\r\n        />\r\n        {currentUser ? (\r\n          <div style={styles.buttons}>\r\n            <Link to=\"/dashboard\" style={styles.button}>\r\n              Go to your Dashboard\r\n            </Link>\r\n            <button onClick={() => logout()} style={styles.button}>\r\n              Log Out\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div style={styles.buttons}>\r\n              <Link to=\"/login\" style={styles.button}>\r\n                Log In\r\n              </Link>\r\n              <Link to=\"/signup\" style={styles.button}>\r\n                Sign Up\r\n              </Link>\r\n            </div>\r\n\r\n            <p>\r\n              Already have an account?{\" \"}\r\n              <Link className=\"login-link\" to=\"/login\">\r\n                Log in here\r\n              </Link>\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","\r\n// import React, { useState } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom'; // Use Link instead of <a> tag\r\n\r\n// const Login = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [errorMessage, setErrorMessage] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n    \r\n//     const credentials = { email, password };\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/login', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(credentials),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Login failed, please check your credentials');\r\n//       }\r\n\r\n//       // On success, navigate to the dashboard or home\r\n//       navigate('/dashboard');\r\n//     } catch (error) {\r\n//       setErrorMessage(error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Login to Your Account</h2>\r\n//       {errorMessage && <p>{errorMessage}</p>}\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label htmlFor=\"email\">Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             id=\"email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label htmlFor=\"password\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p> {/* Use Link here */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { CurrentUser } from '../context/CurrentUser';  // Import the CurrentUser context\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { setCurrentUser } = useContext(CurrentUser);  // Destructure setCurrentUser from the context\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    const credentials = { email, password };\r\n\r\n    try {\r\n      const response = await fetch('/api/authentication', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const token = data.token;  // Assuming the response contains the token\r\n\r\n        // Save the token in localStorage\r\n        localStorage.setItem('token', token);\r\n\r\n        // Fetch the user profile using the token\r\n        const profileResponse = await fetch('/api/authentication/profile', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!profileResponse.ok) {\r\n          throw new Error('Failed to fetch user profile');\r\n        }\r\n\r\n        const userProfile = await profileResponse.json();\r\n\r\n        // Set the current user in the context\r\n        setCurrentUser(userProfile);\r\n\r\n        setSuccess(true);\r\n\r\n        // Navigate to the dashboard after successful login\r\n        navigate('/dashboard');\r\n      } else {\r\n        const errMsg = await response.json();\r\n        setError(errMsg.error || 'Login failed, please check your credentials.');\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred during login.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\r\n      <h2>Login to Your Account</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {success ? (\r\n        <p className=\"success\">Login successful! Redirecting...</p>\r\n      ) : (\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      )}\r\n      <p>Don't have an account? <Link to=\"/signup\">Sign Up</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst User = ({ user }) => {\r\n  if (!user) {\r\n    return <p>No user data available</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Profile</h2>\r\n      <div>\r\n        <strong>Username:</strong> {user.username}\r\n      </div>\r\n      <div>\r\n        <strong>Email:</strong> {user.email}\r\n      </div>\r\n      {/* Add more user-related details here if needed */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\n// this is the account ","import React, { useState } from 'react';\r\n\r\nconst Form = ({ onAddTransaction }) => {\r\n  \r\n  const [type, setType] = useState('income');\r\n  const [category, setCategory] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n   \r\n    if (!category || !amount || !date) {\r\n      alert('Please fill out all fields');\r\n      return;\r\n    }\r\n\r\n     \r\n    onAddTransaction({\r\n      type,\r\n      category,\r\n      amount: parseFloat(amount),\r\n      date\r\n    });\r\n\r\n    // Clear form after submission\r\n    setCategory('');\r\n    setAmount('');\r\n    setDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Type:</label>\r\n        <select value={type} onChange={(e) => setType(e.target.value)}>\r\n          <option value=\"income\">Income</option>\r\n          <option value=\"expense\">Expense</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Category:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={category}\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          placeholder=\"Category\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label>Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          placeholder=\"Amount\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">Add Transaction</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst TransactionList = ({ transactions }) => {\r\n  if (!transactions.length) {\r\n    return <p>No transactions found</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Transaction History</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Category</th>\r\n            <th>Amount</th>\r\n            <th>Date</th>\r\n            <th>Account</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction, index) => (\r\n            <tr key={index}>\r\n              <td>{transaction.type}</td>\r\n              <td>{transaction.category}</td>\r\n              <td>${transaction.amount.toFixed(2)}</td>\r\n              <td>{new Date(transaction.date).toLocaleDateString()}</td>\r\n              <td>{transaction.account_id}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionList;","// signup is still in progress\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        if (password !== confirmPassword) {\r\n            setError('Passwords do not match.');\r\n            return;\r\n        }\r\n\r\n        const userData = {\r\n            username,\r\n            email,\r\n            password\r\n        };\r\n\r\n        try {\r\n            // Fetch call to backend for signup\r\n            const response = await fetch(`/api/accounts/signup`, { \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(userData)\r\n            });\r\n            if (response.ok) {\r\n                setSuccess(true);\r\n                navigate('/dashboard');\r\n            } else {\r\n                const errMsg = await response.json();\r\n                setError(errMsg.error || 'Signup failed.');\r\n            }\r\n        } catch (error) {\r\n            setError('An error occurred during signup.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <h2>Sign Up</h2>\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {success ? (\r\n                <p className=\"success\">Signup successful! Please log in.</p>\r\n            ) : (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <label>Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Confirm Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\">Sign Up</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signup;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaHome } from 'react-icons/fa';\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={() => window.location.href = '/'} style={{ position: 'absolute', top: '10px', left: '10px', height: '30px', width: '30px', display: 'flex', alignItems: 'center', justifyContent: 'center', zIndex: '1000' }}>\r\n        <p style={{ color: 'white', fontSize: '10px' }}>\r\n        Home\r\n        </p>\r\n      </button>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CurrentUser } from '../context/CurrentUser';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useContext(CurrentUser);\r\n  const [accountId, setAccountId] = useState(undefined);\r\n  const [income, setIncome] = useState('');\r\n  const [transactionAmount, setTransactionAmount] = useState('');\r\n  const [transactionsList, setTransactionsList] = useState([]);  // Initialize as an empty array\r\n  const navigate = useNavigate();\r\n\r\n  // Set accountId when currentUser changes\r\n  useEffect(() => {\r\n    if (currentUser && currentUser.account_id) {\r\n      \r\n      setAccountId(currentUser.account_id);\r\n    }\r\n  }, [currentUser, accountId]);\r\n\r\n  // Fetch transactions from the backend \r\n  // fetch token before making the call \r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      if (!currentUser) {\r\n        console.error('User not logged in');\r\n        return;\r\n      }\r\n     \r\n      try {\r\n        // need to pass bearer token with url\r\n        const response = await fetch(`/api/transactions/account/${accountId}`);\r\n        const data = await response.json();\r\n        // Ensure that the data is an array before setting state\r\n        if (Array.isArray(data)) {\r\n          setTransactionsList(data);\r\n        } else {\r\n          console.error(\"Expected array, but got:\", data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching transactions:', error);\r\n      }\r\n    };\r\n\r\n    if (accountId) {\r\n      fetchTransactions();\r\n    }\r\n  }, [accountId, currentUser]);\r\n\r\n  const handleIncomeChange = (e) => {\r\n    setIncome(e.target.value);\r\n  };\r\n\r\n  const handleTransactionChange = (e) => {\r\n    setTransactionAmount(e.target.value);\r\n  };\r\n\r\n  // Handle adding a new transaction\r\n  const handleAddTransaction = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (transactionAmount) {\r\n      try {\r\n        const response = await fetch('/api/transactions', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            account_id: accountId, // Include accountId to associate the transaction\r\n            type: 'expense', // Assuming you're adding an expense; can be dynamic\r\n            category: 'General', // Can be dynamic based on user input\r\n            amount: parseFloat(transactionAmount), // Ensure it's a float\r\n            date: new Date().toISOString(), // Set the current date\r\n          }),\r\n        });\r\n        if (response.ok) {\r\n          const newTransaction = await response.json();\r\n          setTransactionsList((prev) => [...prev, newTransaction]); // Add new transaction to the list\r\n          setTransactionAmount(''); // Reset input field\r\n        } else {\r\n          console.error('Error adding transaction', e);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding transaction:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    (currentUser) ? (\r\n    <div className=\"card\">\r\n      <h2>Dashboard</h2>\r\n      <div>\r\n        <h3>Input Your Income</h3>\r\n        <input\r\n          type=\"number\"\r\n          value={income}\r\n          onChange={handleIncomeChange}\r\n          placeholder=\"Enter your income here\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Log Your Transactions</h3>\r\n        <form onSubmit={handleAddTransaction}>\r\n          <input\r\n            type=\"number\"\r\n            value={transactionAmount}\r\n            onChange={handleTransactionChange}\r\n            placeholder=\"Enter a transaction amount\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Add Transaction</button>\r\n        </form>\r\n      </div>\r\n\r\n      <h4>Transactions List</h4>\r\n      <ul>\r\n        {/* Check if transactionsList is an array before mapping */}\r\n        {Array.isArray(transactionsList) && transactionsList.length > 0 ? (\r\n          transactionsList.map((tran) => (\r\n            <li key={tran.transaction_id}>\r\n              ${tran.amount.toFixed(2)} - {tran.category} ({tran.type})\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No transactions found.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      <p>Please login to view your dashboard.</p>\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n        <button onClick={() => navigate('/login')}>Login</button>\r\n      </div>\r\n    </div>\r\n    ) \r\n  );\r\n};\r\n\r\nexport default Dashboard;","function Error404() {\r\n    return (\r\n        <main>\r\n            <h1>404: PAGE NOT FOUND</h1>\r\n            <p>Oops, sorry, we can't find this page!</p>\r\n            <img src=\"http://localhost:5000/images/kittykat.jpeg\" alt=\"cute cat pic\" />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Error404;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport User from './components/User';\r\nimport Form from './components/Form';\r\nimport TransactionList from './components/TransactionList';\r\nimport CurrentUserProvider from './context/CurrentUser';\r\nimport Signup from './pages/Signup';\r\nimport Layout from './components/Layout';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Error404 from './pages/Error404';\r\nimport './style.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n    <CurrentUserProvider>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/user\" element={<User />} />\r\n          <Route path=\"/form\" element={<Form />} />\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          <Route path=\"/transactionlist\" element={<TransactionList />} />\r\n          <Route path=\"/signup\" element={<Signup />} />\r\n          <Route path=\"*\" element={<Error404 />} />\r\n        </Routes>\r\n      </Router>\r\n    </CurrentUserProvider>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}